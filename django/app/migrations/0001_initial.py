# Generated by Django 4.2.9 on 2024-08-27 08:37

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Child',
            fields=[
                ('child_id', models.AutoField(db_column='child_id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=64)),
                ('surname', models.CharField(db_column='surname', max_length=64)),
                ('patronymic', models.CharField(blank=True, db_column='patronymic', max_length=64, null=True)),
                ('birthday', models.DateField(db_column='birthday')),
                ('add_to_group_date', models.DateField(auto_now_add=True, db_column='add_to_group_date', null=True)),
                ('gender', models.CharField(db_column='gender', max_length=1)),
            ],
            options={
                'db_table': 'child',
            },
        ),
        migrations.CreateModel(
            name='ChildInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(db_column='description', max_length=512)),
            ],
            options={
                'db_table': 'child_info',
            },
        ),
        migrations.CreateModel(
            name='ClassHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_date', models.DateField(db_column='add_date')),
                ('leave_date', models.DateField(db_column='leave_date')),
            ],
            options={
                'db_table': 'class_history',
            },
        ),
        migrations.CreateModel(
            name='ClassInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(db_column='description', max_length=512)),
            ],
            options={
                'db_table': 'class_info',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(db_column='course_id', primary_key=True, serialize=False)),
                ('course_name', models.CharField(db_column='course_name', max_length=128)),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='CourseAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'course_authors',
            },
        ),
        migrations.CreateModel(
            name='CourseByMarkType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'course_by_mark_types',
            },
        ),
        migrations.CreateModel(
            name='CourseComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(db_column='', max_length=512)),
            ],
            options={
                'db_table': 'course_comments',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(db_column='group_id', primary_key=True, serialize=False)),
                ('group_name', models.CharField(db_column='group_name', max_length=64)),
            ],
            options={
                'db_table': 'group_table',
            },
        ),
        migrations.CreateModel(
            name='GroupClass',
            fields=[
                ('class_id', models.AutoField(db_column='class_id', primary_key=True, serialize=False)),
                ('creation_date', models.DateField(db_column='creation_date')),
            ],
            options={
                'db_table': 'group_class',
            },
        ),
        migrations.CreateModel(
            name='GroupCreators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'group_creators',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_date', models.DateTimeField(db_column='lesson_date')),
                ('duration', models.SmallIntegerField(db_column='duration')),
            ],
            options={
                'db_table': 'lesson',
            },
        ),
        migrations.CreateModel(
            name='LoginData',
            fields=[
                ('worker_login', models.CharField(db_column='worker_login', max_length=64, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'login_data',
            },
        ),
        migrations.CreateModel(
            name='MarkCategory',
            fields=[
                ('mark_category', models.CharField(db_column='mark_category', max_length=32, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='description', max_length=96)),
            ],
            options={
                'db_table': 'mark_categories',
            },
        ),
        migrations.CreateModel(
            name='MarksForVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.DecimalField(db_column='mark', decimal_places=1, max_digits=3)),
            ],
            options={
                'db_table': 'marks_for_visit',
            },
        ),
        migrations.CreateModel(
            name='MarkType',
            fields=[
                ('mark_type_id', models.AutoField(db_column='mark_type_id', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='description', max_length=512)),
                ('min_value', models.SmallIntegerField(db_column='min_value')),
                ('max_value', models.SmallIntegerField(db_column='max_value')),
            ],
            options={
                'db_table': 'mark_types',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('parent_id', models.AutoField(db_column='parent_id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=64)),
                ('surname', models.CharField(db_column='surname', max_length=64)),
                ('patronymic', models.CharField(blank=True, db_column='patronymic', max_length=64, null=True)),
                ('role', models.CharField(db_column='role', max_length=64, null=True)),
            ],
            options={
                'db_table': 'parent',
            },
        ),
        migrations.CreateModel(
            name='ParentByChild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'parent_by_child',
            },
        ),
        migrations.CreateModel(
            name='ParentPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(db_column='phone_number', max_length=14)),
            ],
            options={
                'db_table': 'parent_phones',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(db_column='filename', max_length=128)),
                ('add_time', models.TimeField(auto_now_add=True, db_column='add_time')),
            ],
            options={
                'db_table': 'reports',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('level_code', models.CharField(db_column='level_code', max_length=1, primary_key=True, serialize=False)),
                ('role_name', models.CharField(db_column='role_name', max_length=32, unique=True)),
                ('eng_role_name', models.CharField(db_column='eng_role_name', max_length=32)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semester_id', models.AutoField(db_column='semester_id', primary_key=True, serialize=False)),
                ('start_date', models.DateField(db_column='start_date')),
                ('end_date', models.DateField(db_column='end_date')),
            ],
            options={
                'db_table': 'semester',
            },
        ),
        migrations.CreateModel(
            name='TrackType',
            fields=[
                ('track_type_id', models.AutoField(db_column='track_type_id', primary_key=True, serialize=False)),
                ('start_age', models.SmallIntegerField(db_column='start_age')),
                ('end_age', models.SmallIntegerField(db_column='end_age')),
                ('max_lessons_number', models.DecimalField(db_column='max_lessons_number', decimal_places=0, max_digits=1)),
            ],
            options={
                'db_table': 'track_type',
            },
        ),
        migrations.CreateModel(
            name='Visits',
            fields=[
                ('visit_id', models.AutoField(db_column='visit_id', primary_key=True, serialize=False)),
                ('lesson_date', models.DateTimeField(db_column='lesson_date')),
                ('description', models.CharField(db_column='description', max_length=96, null=True)),
                ('visited', models.BooleanField(db_column='visited', default=True)),
            ],
            options={
                'db_table': 'visits',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('worker_id', models.AutoField(db_column='worker_id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=64)),
                ('surname', models.CharField(db_column='surname', max_length=64)),
                ('patronymic', models.CharField(blank=True, db_column='patronymic', max_length=64, null=True)),
                ('hire_date', models.DateField(db_column='hire_date')),
                ('dismissal_date', models.DateField(blank=True, db_column='dismissal_date', null=True)),
            ],
            options={
                'db_table': 'worker',
            },
        ),
        migrations.CreateModel(
            name='WorkerHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tensure_start_date', models.DateField(db_column='tensure_start_date')),
                ('tensure_end_date', models.DateField(db_column='tensure_end_date')),
                ('level_code', models.ForeignKey(db_column='level_code', on_delete=django.db.models.deletion.CASCADE, to='app.role')),
                ('worker_id', models.ForeignKey(db_column='worker_id', on_delete=django.db.models.deletion.CASCADE, to='app.worker')),
            ],
            options={
                'db_table': 'worker_by_history',
            },
        ),
        migrations.CreateModel(
            name='WorkerByRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tensure_start_date', models.DateField(auto_now_add=True, db_column='tensure_start_date')),
                ('level_code', models.ForeignKey(db_column='level_code', on_delete=django.db.models.deletion.CASCADE, to='app.role')),
                ('worker_id', models.ForeignKey(db_column='worker_id', on_delete=django.db.models.deletion.CASCADE, to='app.worker')),
            ],
            options={
                'db_table': 'worker_by_role',
            },
        ),
        migrations.AddConstraint(
            model_name='worker',
            constraint=models.CheckConstraint(check=models.Q(('hire_date__lte', django.db.models.functions.datetime.Now())), name='check_hire_date_le_current_date'),
        ),
        migrations.AddConstraint(
            model_name='worker',
            constraint=models.CheckConstraint(check=models.Q(('dismissal_date__gt', models.F('hire_date'))), name='check_dismissal_date_gt_hire_date'),
        ),
        migrations.AddField(
            model_name='visits',
            name='child_id',
            field=models.ForeignKey(db_column='child_id', on_delete=django.db.models.deletion.CASCADE, to='app.child'),
        ),
        migrations.AddField(
            model_name='visits',
            name='class_id',
            field=models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='app.groupclass'),
        ),
        migrations.AddConstraint(
            model_name='tracktype',
            constraint=models.CheckConstraint(check=models.Q(('start_age__gt', 0)), name='check_start_age_gt_0'),
        ),
        migrations.AddConstraint(
            model_name='tracktype',
            constraint=models.CheckConstraint(check=models.Q(('end_age__gte', models.F('start_age'))), name='check_end_age_gte_start_age'),
        ),
        migrations.AddConstraint(
            model_name='tracktype',
            constraint=models.CheckConstraint(check=models.Q(('max_lessons_number__gt', 0)), name='check_max_lessons_number_gt_0'),
        ),
        migrations.AddConstraint(
            model_name='tracktype',
            constraint=models.UniqueConstraint(fields=('start_age', 'end_age'), name='unique_age'),
        ),
        migrations.AddConstraint(
            model_name='semester',
            constraint=models.CheckConstraint(check=models.Q(('end_date__gt', models.F('start_date'))), name='check_end_date_gt_start_date'),
        ),
        migrations.AddField(
            model_name='report',
            name='child_id',
            field=models.ForeignKey(db_column='child_id', on_delete=django.db.models.deletion.CASCADE, to='app.child'),
        ),
        migrations.AddField(
            model_name='report',
            name='class_id',
            field=models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='app.groupclass'),
        ),
        migrations.AddField(
            model_name='report',
            name='semester',
            field=models.ForeignKey(db_column='semester_id', on_delete=django.db.models.deletion.CASCADE, to='app.semester'),
        ),
        migrations.AddField(
            model_name='parentphone',
            name='parent_id',
            field=models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='app.parent'),
        ),
        migrations.AddField(
            model_name='parentbychild',
            name='child_id',
            field=models.ForeignKey(db_column='child_id', on_delete=django.db.models.deletion.CASCADE, to='app.child'),
        ),
        migrations.AddField(
            model_name='parentbychild',
            name='parent_id',
            field=models.ForeignKey(db_column='parent_id', on_delete=django.db.models.deletion.CASCADE, to='app.parent'),
        ),
        migrations.AddField(
            model_name='marktype',
            name='mark_category',
            field=models.ForeignKey(db_column='mark_category', on_delete=django.db.models.deletion.CASCADE, to='app.markcategory'),
        ),
        migrations.AddField(
            model_name='marksforvisit',
            name='mark_type',
            field=models.ForeignKey(db_column='mark_type', on_delete=django.db.models.deletion.CASCADE, to='app.marktype'),
        ),
        migrations.AddField(
            model_name='marksforvisit',
            name='visit',
            field=models.ForeignKey(db_column='visit_id', on_delete=django.db.models.deletion.CASCADE, to='app.visits'),
        ),
        migrations.AddField(
            model_name='logindata',
            name='worker_id',
            field=models.ForeignKey(db_column='worker_id', on_delete=django.db.models.deletion.CASCADE, to='app.worker'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='class_id',
            field=models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='app.groupclass'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='semester',
            field=models.ForeignKey(blank=True, db_column='semester_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.semester'),
        ),
        migrations.AddField(
            model_name='groupcreators',
            name='curator_id',
            field=models.ForeignKey(db_column='curator_id', on_delete=django.db.models.deletion.CASCADE, to='app.worker'),
        ),
        migrations.AddField(
            model_name='groupcreators',
            name='group_id',
            field=models.ForeignKey(db_column='group_id', on_delete=django.db.models.deletion.CASCADE, to='app.group'),
        ),
        migrations.AddField(
            model_name='groupclass',
            name='course_id',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='app.course'),
        ),
        migrations.AddField(
            model_name='groupclass',
            name='group_id',
            field=models.ForeignKey(db_column='group_id', on_delete=django.db.models.deletion.CASCADE, to='app.group'),
        ),
        migrations.AddField(
            model_name='groupclass',
            name='teacher_id',
            field=models.ForeignKey(db_column='teacher_id', on_delete=django.db.models.deletion.CASCADE, to='app.worker'),
        ),
        migrations.AddField(
            model_name='group',
            name='track_type',
            field=models.ForeignKey(db_column='track_type', on_delete=django.db.models.deletion.CASCADE, to='app.tracktype'),
        ),
        migrations.AddField(
            model_name='coursecomment',
            name='author_id',
            field=models.ForeignKey(db_column='author_id', on_delete=django.db.models.deletion.CASCADE, to='app.worker'),
        ),
        migrations.AddField(
            model_name='coursecomment',
            name='course_id',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='app.course'),
        ),
        migrations.AddField(
            model_name='coursebymarktype',
            name='course_id',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='app.course'),
        ),
        migrations.AddField(
            model_name='coursebymarktype',
            name='mark_type',
            field=models.ForeignKey(db_column='mark_type', on_delete=django.db.models.deletion.CASCADE, to='app.marktype'),
        ),
        migrations.AddField(
            model_name='courseauthor',
            name='author_id',
            field=models.ForeignKey(db_column='author_id', on_delete=django.db.models.deletion.CASCADE, to='app.worker'),
        ),
        migrations.AddField(
            model_name='courseauthor',
            name='course_id',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='app.course'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='author_id',
            field=models.ForeignKey(db_column='author_id', on_delete=django.db.models.deletion.CASCADE, to='app.worker'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='class_id',
            field=models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='app.groupclass'),
        ),
        migrations.AddField(
            model_name='classhistory',
            name='child_id',
            field=models.ForeignKey(db_column='child_id', on_delete=django.db.models.deletion.CASCADE, to='app.child'),
        ),
        migrations.AddField(
            model_name='classhistory',
            name='class_id',
            field=models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='app.groupclass'),
        ),
        migrations.AddField(
            model_name='childinfo',
            name='author_id',
            field=models.ForeignKey(db_column='author_id', on_delete=django.db.models.deletion.CASCADE, to='app.worker'),
        ),
        migrations.AddField(
            model_name='childinfo',
            name='child_id',
            field=models.ForeignKey(db_column='child_id', on_delete=django.db.models.deletion.CASCADE, to='app.child'),
        ),
        migrations.AddField(
            model_name='child',
            name='current_group',
            field=models.ForeignKey(db_column='current_group_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.group'),
        ),
        migrations.AddIndex(
            model_name='workerhistory',
            index=models.Index(fields=['worker_id', 'level_code', 'tensure_start_date'], name='worker_by_h_worker__c63a3c_idx'),
        ),
        migrations.AddConstraint(
            model_name='workerhistory',
            constraint=models.CheckConstraint(check=models.Q(('tensure_start_date__lte', django.db.models.functions.datetime.Now())), name='check_tensure_start_date_le_current_date'),
        ),
        migrations.AddConstraint(
            model_name='workerhistory',
            constraint=models.CheckConstraint(check=models.Q(('tensure_end_date__gte', models.F('tensure_start_date'))), name='check_tensure_end_date_ge_tensure_start_date'),
        ),
        migrations.AddConstraint(
            model_name='workerhistory',
            constraint=models.UniqueConstraint(fields=('worker_id', 'level_code', 'tensure_start_date'), name='unique_level_worker_tensure_date'),
        ),
        migrations.AddIndex(
            model_name='workerbyrole',
            index=models.Index(fields=['worker_id', 'level_code'], name='worker_by_r_worker__f213cd_idx'),
        ),
        migrations.AddConstraint(
            model_name='workerbyrole',
            constraint=models.CheckConstraint(check=models.Q(('tensure_start_date__lte', django.db.models.functions.datetime.Now())), name='check_tens_st_date_le_curr_date'),
        ),
        migrations.AddConstraint(
            model_name='workerbyrole',
            constraint=models.UniqueConstraint(fields=('level_code', 'worker_id'), name='primary_worker_role'),
        ),
        migrations.AddIndex(
            model_name='visits',
            index=models.Index(fields=['child_id', 'class_id', 'lesson_date'], name='visits_child_i_bbf666_idx'),
        ),
        migrations.AddIndex(
            model_name='visits',
            index=models.Index(fields=['class_id', 'lesson_date'], name='visits_class_i_99e3e8_idx'),
        ),
        migrations.AddConstraint(
            model_name='visits',
            constraint=models.UniqueConstraint(fields=('child_id', 'class_id', 'lesson_date'), name='unique_visit'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['class_id', 'semester'], name='reports_class_i_c03937_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['child_id', 'class_id', 'semester', 'filename'], name='reports_child_i_e627bc_idx'),
        ),
        migrations.AddConstraint(
            model_name='report',
            constraint=models.UniqueConstraint(fields=('child_id', 'class_id', 'semester', 'filename'), name='primary_reports'),
        ),
        migrations.AddIndex(
            model_name='parentphone',
            index=models.Index(fields=['parent_id', 'phone_number'], name='parent_phon_parent__e75dcd_idx'),
        ),
        migrations.AddConstraint(
            model_name='parentphone',
            constraint=models.UniqueConstraint(fields=('parent_id', 'phone_number'), name='unique_parent_phone'),
        ),
        migrations.AddIndex(
            model_name='parentbychild',
            index=models.Index(fields=['child_id', 'parent_id'], name='parent_by_c_child_i_f89b91_idx'),
        ),
        migrations.AddConstraint(
            model_name='parentbychild',
            constraint=models.UniqueConstraint(fields=('parent_id', 'child_id'), name='primary_parent_by_child'),
        ),
        migrations.AddConstraint(
            model_name='marktype',
            constraint=models.CheckConstraint(check=models.Q(('min_value__gte', 0)), name='check_min_value_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='marktype',
            constraint=models.CheckConstraint(check=models.Q(('max_value__gt', models.F('min_value'))), name='check_max_value_gt_min_value'),
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.UniqueConstraint(fields=('class_id', 'lesson_date'), name='primary_lesson'),
        ),
        migrations.AddIndex(
            model_name='groupcreators',
            index=models.Index(fields=['group_id', 'curator_id'], name='group_creat_group_i_5121a0_idx'),
        ),
        migrations.AddConstraint(
            model_name='groupcreators',
            constraint=models.UniqueConstraint(fields=('group_id', 'curator_id'), name='primary_group_by_creator'),
        ),
        migrations.AddIndex(
            model_name='groupclass',
            index=models.Index(fields=['teacher_id', 'group_id', 'course_id'], name='group_class_teacher_3fb982_idx'),
        ),
        migrations.AddConstraint(
            model_name='groupclass',
            constraint=models.UniqueConstraint(fields=('teacher_id', 'group_id', 'course_id'), name='unique_class'),
        ),
        migrations.AddIndex(
            model_name='coursecomment',
            index=models.Index(fields=['course_id', 'author_id'], name='course_comm_course__ac54a3_idx'),
        ),
        migrations.AddConstraint(
            model_name='coursecomment',
            constraint=models.UniqueConstraint(fields=('course_id', 'author_id'), name='primary_course_comments'),
        ),
        migrations.AddConstraint(
            model_name='coursebymarktype',
            constraint=models.UniqueConstraint(fields=('course_id', 'mark_type'), name='primary_course_by_mark'),
        ),
        migrations.AddIndex(
            model_name='courseauthor',
            index=models.Index(fields=['author_id', 'course_id'], name='course_auth_author__d9f0a7_idx'),
        ),
        migrations.AddConstraint(
            model_name='courseauthor',
            constraint=models.UniqueConstraint(fields=('course_id', 'author_id'), name='primary_course_by_author'),
        ),
        migrations.AddIndex(
            model_name='classinfo',
            index=models.Index(fields=['class_id', 'author_id'], name='class_info_class_i_eff91b_idx'),
        ),
        migrations.AddConstraint(
            model_name='classinfo',
            constraint=models.UniqueConstraint(fields=('class_id', 'author_id'), name='primary_class_info'),
        ),
        migrations.AddIndex(
            model_name='classhistory',
            index=models.Index(fields=['child_id', 'class_id'], name='class_histo_child_i_95167c_idx'),
        ),
        migrations.AddConstraint(
            model_name='classhistory',
            constraint=models.CheckConstraint(check=models.Q(('add_date__lte', django.db.models.functions.datetime.Now())), name='check_add_date_le_current_date'),
        ),
        migrations.AddConstraint(
            model_name='classhistory',
            constraint=models.CheckConstraint(check=models.Q(('leave_date__gte', models.F('add_date'))), name='check_leave_date_ge_add_date'),
        ),
        migrations.AddConstraint(
            model_name='classhistory',
            constraint=models.UniqueConstraint(fields=('child_id', 'class_id'), name='primary_class_history'),
        ),
        migrations.AddIndex(
            model_name='childinfo',
            index=models.Index(fields=['child_id', 'author_id'], name='child_info_child_i_87d14b_idx'),
        ),
        migrations.AddConstraint(
            model_name='childinfo',
            constraint=models.UniqueConstraint(fields=('child_id', 'author_id'), name='primary_child_info'),
        ),
        migrations.AddIndex(
            model_name='child',
            index=models.Index(fields=['current_group'], name='child_current_92ca83_idx'),
        ),
        migrations.AddConstraint(
            model_name='child',
            constraint=models.CheckConstraint(check=models.Q(('birthday__lt', django.db.models.functions.datetime.Now())), name='check_birthday_lt_current_date'),
        ),
    ]
